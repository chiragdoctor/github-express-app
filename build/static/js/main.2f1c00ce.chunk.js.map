{"version":3,"sources":["components/layouts/spinner.gif","components/layouts/NavBar.js","components/UserItem.js","components/layouts/Spinner.js","components/Users.js","components/Search.js","components/layouts/Alert.js","components/layouts/About.js","components/User.js","App.js","index.js"],"names":["module","exports","NavBar","title","icon","className","href","to","defaultProps","UserItem","user","avatar_url","login","src","alt","style","width","Spinner","spinner","margin","display","styles","gridTemplateColumns","gridGap","Users","users","loading","map","key","id","Search","props","state","text","onChangeHandler","bind","onSubmitHandler","onClickHandler","event","this","setState","target","value","preventDefault","setAlert","searchUsers","clearUsers","onSubmit","type","name","placeholder","onChange","showClear","onClick","Component","Alert","alert","msg","About","User","getUser","match","params","location","bio","html_url","followers","following","public_repos","public_gists","hireable","rel","padding","App","a","axios","get","res","data","items","setTimeout","username","exact","path","render","length","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2f1c00ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.f6d9fc27.gif\";","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nconst NavBar = ({ title, icon }) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<nav className=\"navbar bg-primary\">\n\t\t\t\t<a href=\"/\">\n\t\t\t\t\t<h1>\n\t\t\t\t\t\t<i className={icon}> </i> {title}\n\t\t\t\t\t</h1>\n\t\t\t\t</a>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/\"> Home</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/about\">About</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t</Fragment>\n\t);\n};\n\nNavBar.defaultProps = {\n\ttitle: 'GitHub Project',\n\ticon: 'fab fa-github'\n};\n\nNavBar.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n\ticon: PropTypes.string.isRequired\n};\n\nexport default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst UserItem = ({ user }) => {\n\tconst { avatar_url, login } = user;\n\n\treturn (\n\t\t<div className=\"card text-center\">\n\t\t\t<img src={avatar_url} alt=\"\" className=\"round-img\" style={{ width: '120px' }} />\n\t\t\t<h3> {login}</h3>\n\t\t\t<div>\n\t\t\t\t<Link to={`/user/${login}`} className=\"btn btn-dark btn-sm my-1\">\n\t\t\t\t\tGitHub Profile\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nUserItem.propTypes = {\n\tuser: PropTypes.object.isRequired\n};\n\nexport default UserItem;\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\nconst Spinner = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<img src={spinner} alt=\"Loading ....\" style={{ width: '200px', margin: 'auto', display: 'block' }} />\n\t\t</Fragment>\n\t);\n};\n\nexport default Spinner;\n","import React from 'react';\nimport UserItem from './UserItem';\nimport Spinner from './layouts/Spinner';\nimport PropTypes from 'prop-types';\nconst Users = ({ users, loading }) => {\n\tif (loading) {\n\t\treturn <Spinner />;\n\t} else {\n\t\treturn <div style={styles}>{users.map((user) => <UserItem key={user.id} user={user} />)}</div>;\n\t}\n};\n\nconst styles = {\n\tdisplay: 'grid',\n\tgridTemplateColumns: 'repeat(3,1fr)',\n\tgridGap: '1rem'\n};\n\nUsers.propTypes = {\n\tusers: PropTypes.array.isRequired,\n\tloading: PropTypes.bool.isRequired\n};\n\nexport default Users;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nclass Search extends Component {\n\tstatic propTypes = {\n\t\tsearchUsers: PropTypes.func.isRequired,\n\t\tclearUsers: PropTypes.func.isRequired,\n\t\tshowClear: PropTypes.bool.isRequired\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttext: ''\n\t\t};\n\t\tthis.onChangeHandler = this.onChangeHandler.bind(this);\n\t\tthis.onSubmitHandler = this.onSubmitHandler.bind(this);\n\t\tthis.onClickHandler = this.onClickHandler.bind(this);\n\t}\n\tonChangeHandler(event) {\n\t\tthis.setState({\n\t\t\ttext: event.target.value\n\t\t});\n\t}\n\tonSubmitHandler(event) {\n\t\tevent.preventDefault();\n\t\tif (this.state.text === '') {\n\t\t\tthis.props.setAlert('Enter GitHub User Name', 'danger');\n\t\t} else {\n\t\t\tthis.props.searchUsers(this.state.text);\n\t\t\tthis.setState({\n\t\t\t\ttext: ''\n\t\t\t});\n\t\t}\n\t}\n\tonClickHandler() {\n\t\tthis.props.clearUsers();\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form className=\"form\" onSubmit={this.onSubmitHandler}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\tvalue={this.state.text}\n\t\t\t\t\t\tplaceholder=\"Enter Github UserName to Search\"\n\t\t\t\t\t\tonChange={this.onChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t<input type=\"submit\" value=\"Submit\" className=\"btn btn-dark btn-block\" />\n\t\t\t\t</form>\n\t\t\t\t{this.props.showClear && (\n\t\t\t\t\t<button className=\"btn btn-light btn-block\" onClick={this.onClickHandler}>\n\t\t\t\t\t\tClear Users\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Search;\n","import React from 'react';\n\nconst Alert = ({ alert }) => {\n\treturn (\n\t\talert !== null && (\n\t\t\t<div className={`alert alert-${alert.type}`}>\n\t\t\t\t<i className=\"fas fa-info-circle\" /> {alert.msg}\n\t\t\t</div>\n\t\t)\n\t);\n};\n\nexport default Alert;\n","import React, { Fragment } from 'react';\n\nconst About = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1> About Us Page</h1>\n\t\t\t<h2> We are building React GitHub Project</h2>\n\t\t</Fragment>\n\t);\n};\n\nexport default About;\n","import React, { Component, Fragment } from 'react';\nimport Spinner from './layouts/Spinner';\nimport { Link } from 'react-router-dom';\n\nclass User extends Component {\n    componentDidMount() {\n        this.props.getUser(this.props.match.params.login);\n    }\n\n    render() {\n        const {\n            name,\n            avatar_url,\n            location,\n            bio,\n            login,\n            html_url,\n            followers,\n            following,\n            public_repos,\n            public_gists,\n            hireable,\n        } = this.props.user;\n        const { loading } = this.props;\n\n        if (loading) {\n            return <Spinner />;\n        }\n\n        return (\n            <Fragment>\n                <Link to='/' className='btn btn-light'>\n                    {' '}\n                    Back to Search\n                </Link>\n                <div className='card card-shadow grid-2'>\n                    <div className='all-center'>\n                        <img src={avatar_url} alt='GitHub' className='round-img' style={{ width: '300px' }} />\n                    </div>\n                    <div>\n                        <h1 className='p'>{name}</h1>\n                        <h3 className='p'>{login}</h3>\n                        <p className='p'>Location: {location}</p>\n\n                        <p className='p'>Bio: {bio ? bio : 'Bio not available..'}</p>\n                        <div>\n                            <p className='p'>\n                                Hireable :{' '}\n                                {hireable ? <i className='fas fa-check text-success' /> : <i className='fas fa-ban text-danger' />}\n                            </p>\n                        </div>\n                        <div className='badge card-shadow grid-2' style={{ display: 'grid' }}>\n                            <div className='text-center'>\n                                <h3>Followers: {followers}</h3>\n                            </div>\n\n                            <div className='text-center'>\n                                <h3>Following: {following}</h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='card card-shadow grid-2'>\n                    <div className='text-center'>\n                        <h3>Public Repos: {public_repos}</h3>\n                    </div>\n                    <div className='text-center'>\n                        <h3>Public Gists: {public_gists}</h3>\n                    </div>\n                </div>\n                <p>\n                    <a\n                        href={html_url}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        className='btn btn-dark text-center p-4'\n                        style={{ width: '100%', padding: '1rem' }}\n                    >\n                        View Profile\n                    </a>\n                </p>\n            </Fragment>\n        );\n    }\n}\n\nexport default User;\n","import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NavBar from './components/layouts/NavBar';\nimport Users from './components/Users';\nimport axios from 'axios';\nimport Search from './components/Search';\nimport Alert from './components/layouts/Alert';\nimport About from './components/layouts/About';\nimport User from './components/User';\n\nclass App extends Component {\n\t//Default State\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tusers: [],\n\t\t\tloading: false,\n\t\t\talert: null,\n\t\t\tuser: {}\n\t\t};\n\t}\n\t//Renders first 30 users when Home Page loads\n\tasync componentDidMount() {\n\t\tthis.setState({ loading: true });\n\t\tconst res = await axios.get('https://api.github.com/users');\n\t\tthis.setState({\n\t\t\tusers: res.data,\n\t\t\tloading: false\n\t\t});\n\t}\n\t//Search for github username string\n\tsearchUsers = async (text) => {\n\t\tthis.setState({ loading: true });\n\t\tconst res = await axios.get(`https://api.github.com/search/users?q=${text}`);\n\t\tthis.setState({\n\t\t\tusers: res.data.items,\n\t\t\tloading: false\n\t\t});\n\t};\n\t//Clear Button Method\n\tclearUsers = () => {\n\t\tthis.setState({\n\t\t\tusers: [],\n\t\t\tloading: false\n\t\t});\n\t};\n\t//Show Alert\n\tsetAlert = (msg, type) => {\n\t\tthis.setState({\n\t\t\talert: { msg: msg, type: type }\n\t\t});\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({\n\t\t\t\talert: null\n\t\t\t});\n\t\t}, 2500);\n\t};\n\t//Get Single User Method\n\tgetUser = async (username) => {\n\t\tthis.setState({ loading: true });\n\t\tconst res = await axios.get(`https://api.github.com/users/${username}`);\n\t\tthis.setState({\n\t\t\tuser: res.data,\n\t\t\tloading: false\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<NavBar />\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<Alert alert={this.state.alert} />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\t\t\t\t\tsearchUsers={this.searchUsers}\n\t\t\t\t\t\t\t\t\t\t\tclearUsers={this.clearUsers}\n\t\t\t\t\t\t\t\t\t\t\tshowClear={this.state.users.length > 0 ? true : false}\n\t\t\t\t\t\t\t\t\t\t\tsetAlert={this.setAlert}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Users loading={this.state.loading} users={this.state.users} />\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route exact path=\"/about\" component={About} />\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\tpath=\"/user/:login\"\n\t\t\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t\t\t<User\n\t\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t\t\tgetUser={this.getUser}\n\t\t\t\t\t\t\t\t\t\tuser={this.state.user}\n\t\t\t\t\t\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}